defmodule GlixBackEnd.Repo.Migrations.EngagmentDomain do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:like_posts, primary_key: false) do
      add :user_id,
          references(:users,
            column: :id,
            name: "like_posts_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :post_id,
          references(:posts,
            column: :id,
            name: "like_posts_post_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false
    end

    create table(:like_comments, primary_key: false) do
      add :user_id,
          references(:users,
            column: :id,
            name: "like_comments_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :comment_id,
          references(:comments,
            column: :id,
            name: "like_comments_comment_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false
    end
  end

  def down do
    drop constraint(:like_comments, "like_comments_user_id_fkey")

    drop constraint(:like_comments, "like_comments_comment_id_fkey")

    drop table(:like_comments)

    drop constraint(:like_posts, "like_posts_user_id_fkey")

    drop constraint(:like_posts, "like_posts_post_id_fkey")

    drop table(:like_posts)
  end
end
